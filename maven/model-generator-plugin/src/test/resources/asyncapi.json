{
  "asyncapi" : "2.6.0",
  "id" : "urn:org:iris_events:EventHandlersApp",
  "info" : {
    "title" : "EventHandlersApp",
    "version" : "1.0.0"
  },
  "defaultContentType" : "application/json",
  "channels" : {
    "produced-event/produced-event" : {
      "subscribe" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/ProducedEvent"
          },
          "name" : "ProducedEvent",
          "title" : "ProducedEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "vhost" : "/",
            "name" : "produced-event",
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "produced-event",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "passthrough-outbound-event/passthrough-outbound-event" : {
      "subscribe" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/PassthroughOutboundEvent"
          },
          "name" : "PassthroughOutboundEvent",
          "title" : "PassthroughOutboundEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "vhost" : "/",
            "name" : "passthrough-outbound-event",
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "passthrough-outbound-event",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "cached-message/cached-message" : {
      "subscribe" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/CachedEvent"
          },
          "name" : "CachedEvent",
          "title" : "CachedEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "vhost" : "/",
            "name" : "cached-message",
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "cached-message",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "rpc-response/rpc-response" : {
      "subscribe" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/RpcResponseEvent"
          },
          "name" : "RpcResponseEvent",
          "title" : "RpcResponseEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "vhost" : "/",
            "name" : "rpc-response",
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "rpc-response",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "test-event-with-documentation/test-event-with-documentation" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/TestEventWithDocumentation"
          },
          "name" : "TestEventWithDocumentation",
          "title" : "TestEventWithDocumentation"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-event-with-documentation",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-event-with-documentation",
            "autoDelete" : false,
            "type" : "direct"
          }
        }
      }
    },
    "test-event-with-requirements/test-event-with-requirements" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/TestEventWithRequirements"
          },
          "name" : "TestEventWithRequirements",
          "title" : "TestEventWithRequirements"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-event-with-requirements",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-event-with-requirements",
            "autoDelete" : false,
            "type" : "direct"
          }
        }
      }
    },
    "namespace/test-event-v1/default-test-event-v1" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ "**", "admin.reward" ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/TestEventV1"
          },
          "name" : "TestEventV1",
          "title" : "TestEventV1"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "default-test-event-v1",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "namespace/test-event-v1",
            "autoDelete" : false,
            "type" : "direct"
          }
        }
      }
    },
    "test-event-v2/test-event-v2" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : 10000
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/TestEventV2"
          },
          "name" : "TestEventV2",
          "title" : "TestEventV2"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-event-v2",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-event-v2",
            "autoDelete" : false,
            "type" : "direct"
          }
        }
      }
    },
    "frontend-test-event-v1/fe-test-event-v1" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "FRONTEND"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/FrontendTestEventV1"
          },
          "name" : "FrontendTestEventV1",
          "title" : "FrontendTestEventV1"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "fe-test-event-v1",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "frontend-test-event-v1",
            "autoDelete" : false,
            "type" : "direct"
          }
        }
      }
    },
    "test-topic-exchange/*.*.rabbit,fast.orange.*" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/TopicTestEventV1"
          },
          "name" : "TopicTestEventV1",
          "title" : "TopicTestEventV1"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "*.*.rabbit,fast.orange.*",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-topic-exchange",
            "autoDelete" : false,
            "type" : "topic"
          }
        }
      }
    },
    "test-fanout-exchange/test-fanout-exchange" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/FanoutTestEventV1"
          },
          "name" : "FanoutTestEventV1",
          "title" : "FanoutTestEventV1"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-fanout-exchange",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-fanout-exchange",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "test-generated-exchange/test-generated-exchange" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/GeneratedTestEvent"
          },
          "name" : "GeneratedTestEvent",
          "title" : "GeneratedTestEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-generated-exchange",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "test-generated-exchange",
            "autoDelete" : false,
            "type" : "topic"
          }
        }
      }
    },
    "event-defaults/event-defaults" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/EventDefaults"
          },
          "name" : "EventDefaults",
          "title" : "EventDefaults"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "event-defaults",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "event-defaults",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "passthrough-inbound-event/passthrough-inbound-event" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/PassthroughInboundEvent"
          },
          "name" : "PassthroughInboundEvent",
          "title" : "PassthroughInboundEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "passthrough-inbound-event",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "passthrough-inbound-event",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "map-payload-event/map-payload-event" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/MapPayloadEvent"
          },
          "name" : "MapPayloadEvent",
          "title" : "MapPayloadEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "map-payload-event",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "map-payload-event",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "list-payload-event/list-payload-event" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/ListPayloadEvent"
          },
          "name" : "ListPayloadEvent",
          "title" : "ListPayloadEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "list-payload-event",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "list-payload-event",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "rpc-request/rpc-request" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              },
              "x-rpc-response-type" : {
                "type" : "string",
                "description" : "RPC response type property.",
                "value" : "org.iris_events.asyncapi.runtime.scanner.app.EventHandlersApp$RpcResponseEvent"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/RpcRequestEvent"
          },
          "name" : "RpcRequestEvent",
          "title" : "RpcRequestEvent"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "rpc-request",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "rpc-request",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    },
    "snapshot-requested/inventory" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ "admin.merchant", "admin.reward" ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/SnapshotRequested"
          },
          "name" : "SnapshotRequested",
          "title" : "SnapshotRequested"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : false,
            "vhost" : "/",
            "name" : "inventory",
            "autoDelete" : true,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "snapshot-requested",
            "autoDelete" : false,
            "type" : "topic"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "GeneratedTestEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          },
          "status" : {
            "type" : "string",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : true
      },
      "TopicTestEventV1" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          },
          "status" : {
            "type" : "string",
            "examples" : [ ]
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "FrontendTestEventV1" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          },
          "status" : {
            "type" : "string",
            "examples" : [ ]
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "FanoutTestEventV1" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          },
          "status" : {
            "type" : "string",
            "examples" : [ ]
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "MapPayloadEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "userMap" : {
            "type" : "object",
            "examples" : [ ],
            "additionalProperties" : {
              "$ref" : "#/components/schemas/MapValue"
            },
            "existingJavaType" : "java.util.Map<java.lang.String, org.iris_events.asyncapi.runtime.scanner.app.EventHandlersApp$MapValue>"
          }
        },
        "x-iris-generated" : false
      },
      "TestEventWithRequirements" : {
        "type" : "object",
        "required" : [ "id", "status" ],
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          },
          "status" : {
            "type" : "string",
            "examples" : [ ]
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "PassthroughInboundEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "TestEventV2" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          },
          "name" : {
            "type" : "string",
            "examples" : [ ]
          },
          "payload" : {
            "type" : "null",
            "examples" : [ ]
          },
          "someMap" : {
            "type" : "object",
            "examples" : [ ],
            "additionalProperties" : {
              "type" : "string"
            },
            "existingJavaType" : "java.util.Map<java.lang.String, java.lang.String>"
          },
          "surname" : {
            "type" : "string",
            "examples" : [ ]
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "EventDefaults" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "TestEventV1" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          },
          "status" : {
            "type" : "string",
            "examples" : [ ]
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "RpcRequestEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "rpcId" : {
            "type" : "string",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "SnapshotRequested" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "resource_id" : {
            "type" : "string",
            "examples" : [ ]
          },
          "resource_type" : {
            "type" : "string",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : true
      },
      "TestEventWithDocumentation" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "altId" : {
            "type" : "integer",
            "maximum" : 150.0,
            "minimum" : 18.0,
            "examples" : [ ],
            "description" : "Alternative event id"
          },
          "id" : {
            "type" : "integer",
            "minimum" : 5.0,
            "examples" : [ ]
          },
          "status" : {
            "type" : "string",
            "enum" : [ "available", "pending", "sold" ],
            "examples" : [ ],
            "description" : "status of the user entity"
          },
          "user" : {
            "$ref" : "#/components/schemas/User",
            "examples" : [ ]
          }
        },
        "description" : "Event with extensive documentation for test purposes",
        "x-iris-generated" : false
      },
      "ListPayloadEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "userList" : {
            "type" : "array",
            "examples" : [ ],
            "items" : {
              "$ref" : "#/components/schemas/User",
              "examples" : [ ]
            }
          }
        },
        "x-iris-generated" : false
      },
      "CachedEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false,
        "x-cached-message-ttl-seconds" : 100
      },
      "PassthroughOutboundEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "ProducedEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "RpcResponseEvent" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "rpcId" : {
            "type" : "string",
            "examples" : [ ]
          }
        },
        "x-iris-generated" : false
      },
      "Status" : {
        "type" : "string",
        "enum" : [ "dormant", "live", "dead" ],
        "examples" : [ ]
      },
      "User" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "age" : {
            "type" : "integer",
            "examples" : [ ],
            "description" : "Age of the user"
          },
          "name" : {
            "type" : "string",
            "examples" : [ ],
            "description" : "Name of the user"
          },
          "status" : {
            "examples" : [ ],
            "allOf" : [ {
              "$ref" : "#/components/schemas/Status",
              "examples" : [ ]
            }, {
              "examples" : [ ],
              "description" : "Status of the user"
            } ]
          },
          "surname" : {
            "type" : "string",
            "examples" : [ ],
            "description" : "Surname of the user"
          }
        },
        "description" : "This is a User schema component"
      },
      "MapValue" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "id" : {
            "type" : "string",
            "examples" : [ ]
          },
          "value" : {
            "type" : "string",
            "examples" : [ ]
          }
        }
      }
    }
  }
}
