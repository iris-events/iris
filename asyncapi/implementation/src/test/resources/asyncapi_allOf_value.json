{
  "asyncapi" : "2.6.0",
  "id" : "urn:org:iris_events:ParseErrorEventHandlersApp",
  "info" : {
    "title" : "ParseErrorEventHandlersApp",
    "version" : "1.0.0"
  },
  "defaultContentType" : "application/json",
  "channels" : {
    "event-with-described-enum/event-with-described-enum" : {
      "publish" : {
        "bindings" : {
          "amqp" : { }
        },
        "message" : {
          "headers" : {
            "type" : "object",
            "properties" : {
              "x-scope" : {
                "type" : "string",
                "description" : "Message scope. Default is INTERNAL",
                "value" : "INTERNAL"
              },
              "x-ttl" : {
                "type" : "integer",
                "description" : "TTL of the message. If set to -1 (default) will use brokers default.",
                "value" : -1
              },
              "x-roles-allowed" : {
                "type" : "array",
                "description" : "Allowed roles for this message. Default is empty",
                "value" : [ ]
              },
              "x-dead-letter" : {
                "type" : "string",
                "description" : "Dead letter queue definition. Default is dead-letter",
                "value" : "dead.dead-letter"
              }
            }
          },
          "payload" : {
            "$ref" : "#/components/schemas/EventWithDescribedEnum"
          },
          "name" : "EventWithDescribedEnum",
          "title" : "EventWithDescribedEnum"
        }
      },
      "bindings" : {
        "amqp" : {
          "is" : "routingKey",
          "queue" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "event-with-described-enum",
            "autoDelete" : false,
            "exclusive" : false
          },
          "exchange" : {
            "durable" : true,
            "vhost" : "/",
            "name" : "event-with-described-enum",
            "autoDelete" : false,
            "type" : "fanout"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "EventWithDescribedEnum" : {
        "type" : "object",
        "examples" : [ ],
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/TestType",
            "examples" : [ ],
            "description" : "Requirement to verify."
          }
        },
        "x-iris-generated" : false
      },
      "TestType" : {
        "type" : "string",
        "enum" : [ "FOO", "BAR" ],
        "examples" : [ ]
      }
    }
  }
}