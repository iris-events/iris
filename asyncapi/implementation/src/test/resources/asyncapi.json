{
  "info": {
    "title": "EventHandlersApp",
    "version": "1.0.0"
  },
  "asyncapi": "2.0.0",
  "id": "urn:id:global:EventHandlersApp",
  "channels": {
    "test-event-v1/default-test-event-v1": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 2
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": [
                  "AUTHENTICATED",
                  "admin.reward"
                ]
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "TestEventV1",
          "title": "TestEventV1",
          "payload": {
            "$ref": "#/components/schemas/TestEventV1"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "test-event-v1",
            "autoDelete": false,
            "type": "direct"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "default-test-event-v1",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "test-event-v2/test-event-v2": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": 10000
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "TestEventV2",
          "title": "TestEventV2",
          "payload": {
            "$ref": "#/components/schemas/TestEventV2"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "test-event-v2",
            "autoDelete": false,
            "type": "direct"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "test-event-v2",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "frontend-test-event-v1/fe-test-event-v1": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "FRONTEND"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "FrontendTestEventV1",
          "title": "FrontendTestEventV1",
          "payload": {
            "$ref": "#/components/schemas/FrontendTestEventV1"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "frontend-test-event-v1",
            "autoDelete": false,
            "type": "direct"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "fe-test-event-v1",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "test-topic-exchange/*.*.rabbit,fast.orange.*": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "TopicTestEventV1",
          "title": "TopicTestEventV1",
          "payload": {
            "$ref": "#/components/schemas/TopicTestEventV1"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "test-topic-exchange",
            "autoDelete": false,
            "type": "topic"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "*.*.rabbit,fast.orange.*",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "test-fanout-exchange/test-fanout-exchange": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "FanoutTestEventV1",
          "title": "FanoutTestEventV1",
          "payload": {
            "$ref": "#/components/schemas/FanoutTestEventV1"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "test-fanout-exchange",
            "autoDelete": false,
            "type": "fanout"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "test-fanout-exchange",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "test-generated-exchange/test-generated-exchange": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "GeneratedTestEvent",
          "title": "GeneratedTestEvent",
          "payload": {
            "$ref": "#/components/schemas/GeneratedTestEvent"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "test-generated-exchange",
            "autoDelete": false,
            "type": "topic"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "test-generated-exchange",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "event-defaults/event-defaults": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "EventDefaults",
          "title": "EventDefaults",
          "payload": {
            "$ref": "#/components/schemas/EventDefaults"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "event-defaults",
            "autoDelete": false,
            "type": "fanout"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "event-defaults",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "passthrough-inbound-event/passthrough-inbound-event": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "PassthroughInboundEvent",
          "title": "PassthroughInboundEvent",
          "payload": {
            "$ref": "#/components/schemas/PassthroughInboundEvent"
          },
          "x-response": {
            "$ref": "#/components/schemas/PassthroughOutboundEvent"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "passthrough-inbound-event",
            "autoDelete": false,
            "type": "fanout"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "passthrough-inbound-event",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "map-payload-event/map-payload-event": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "MapPayloadEvent",
          "title": "MapPayloadEvent",
          "payload": {
            "$ref": "#/components/schemas/MapPayloadEvent"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "map-payload-event",
            "autoDelete": false,
            "type": "fanout"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "map-payload-event",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "list-payload-event/list-payload-event": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "ListPayloadEvent",
          "title": "ListPayloadEvent",
          "payload": {
            "$ref": "#/components/schemas/ListPayloadEvent"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "list-payload-event",
            "autoDelete": false,
            "type": "fanout"
          },
          "queue": {
            "durable": true,
            "vhost": "/",
            "name": "list-payload-event",
            "autoDelete": false,
            "exclusive": false
          }
        }
      }
    },
    "snapshot-requested/inventory": {
      "publish": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": [
                  "admin.merchant",
                  "admin.reward"
                ]
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "SnapshotRequested",
          "title": "SnapshotRequested",
          "payload": {
            "$ref": "#/components/schemas/SnapshotRequested"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "snapshot-requested",
            "autoDelete": false,
            "type": "topic"
          },
          "queue": {
            "durable": false,
            "vhost": "/",
            "name": "inventory",
            "autoDelete": true,
            "exclusive": false
          }
        }
      }
    },
    "produced-event/produced-event": {
      "subscribe": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "ProducedEvent",
          "title": "ProducedEvent",
          "payload": {
            "$ref": "#/components/schemas/ProducedEvent"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "produced-event",
            "autoDelete": false,
            "type": "fanout"
          },
          "queue": {
            "vhost": "/",
            "name": "produced-event",
            "exclusive": false
          }
        }
      }
    },
    "passthrough-outbound-event/passthrough-outbound-event": {
      "subscribe": {
        "bindings": {
          "amqp": {
            "deliveryMode": 1
          }
        },
        "message": {
          "headers": {
            "type": "object",
            "properties": {
              "x-scope": {
                "description": "Message scope. Default is INTERNAL",
                "type": "string",
                "value": "INTERNAL"
              },
              "x-ttl": {
                "description": "TTL of the message. If set to -1 (default) will use brokers default.",
                "type": "integer",
                "value": -1
              },
              "x-roles-allowed": {
                "description": "Allowed roles for this message. Default is empty",
                "type": "array",
                "value": []
              },
              "x-dead-letter": {
                "description": "Dead letter queue definition. Default is dead-letter",
                "type": "string",
                "value": "dead.dead-letter"
              }
            }
          },
          "name": "PassthroughOutboundEvent",
          "title": "PassthroughOutboundEvent",
          "payload": {
            "$ref": "#/components/schemas/PassthroughOutboundEvent"
          }
        }
      },
      "bindings": {
        "amqp": {
          "is": "routingKey",
          "exchange": {
            "durable": true,
            "vhost": "/",
            "name": "passthrough-outbound-event",
            "autoDelete": false,
            "type": "fanout"
          },
          "queue": {
            "vhost": "/",
            "name": "passthrough-outbound-event",
            "exclusive": false
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Status": {
        "type": "string",
        "enum": [
          "dormant",
          "live",
          "dead"
        ]
      },
      "GeneratedTestEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": true,
          "generatedClass": true
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "age": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Status"
          },
          "surname": {
            "type": "string"
          }
        }
      },
      "TopicTestEventV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "FrontendTestEventV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "PassthroughOutboundEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "ProducedEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "FanoutTestEventV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "MapPayloadEvent": {
        "type": "object",
        "properties": {
          "userMap": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/MapValue"
            },
            "existingJavaType": "java.util.Map<java.lang.String, id.global.iris.asyncapi.runtime.scanner.app.EventHandlersApp$MapValue>"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "MapValue": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "PassthroughInboundEvent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "TestEventV2": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "payload": {
            "type": "null"
          },
          "someMap": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "existingJavaType": "java.util.Map<java.lang.String, java.lang.String>"
          },
          "surname": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "EventDefaults": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "TestEventV1": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      },
      "SnapshotRequested": {
        "type": "object",
        "properties": {
          "resourceId": {
            "type": "string"
          },
          "resourceType": {
            "type": "string"
          }
        },
        "additionalProperties": {
          "isGeneratedClass": true,
          "generatedClass": true
        }
      },
      "ListPayloadEvent": {
        "type": "object",
        "properties": {
          "userList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/User"
            }
          }
        },
        "additionalProperties": {
          "isGeneratedClass": false,
          "generatedClass": false
        }
      }
    }
  }
}